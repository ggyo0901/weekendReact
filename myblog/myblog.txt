
Redux의 미들웨어 thunk와 Saga

----------------------------------------------------------

리덕스는 동기적 흐름을 통해 동작

액션 생성 -> 디스패치 -> store에 전달 -> 리듀서는 정해진 로직에 의해 액션을 처리 -> 상태값을 변환

하지만, 리덕스에서는 동기적인 흐름만으로는 처리하기 힘든 작업들이 존재
대표적으로 시간을 딜레이시켜 동작, 외부에서 데이터를 요청하여 그에 따른 응답을 보여주는 경우

액션생성 -> 디스패치 -> store에 전달 -> 리듀서는 정해진 로직에 의해 액션처리 (*처리하는 시간) ->  바뀐 상태값을 반환

----------------------------------------------------------

동기
: 요청을 보낸 후 결과물을 받아야만 다음 동작이 이루어지는 방식

비동기
: 요청을 보낸 후 결과물을 받지 않아도 다음 동작이 이루어지는 방식

자바스크립트는 싱글스레드 = 한번에 하나의 로직

----------------------------------------------------------

Thunk
    .then()
    : redux-thunk는 리덕스 미들웨어에서 비동기 작업을   동기적으로 처리하는 가장 대표적인 미들웨어 중 하나
    thunk는 딜레이(시간이걸리는행위)를 구현을 직접
    .then 함수로 인하여 로직자체가 분리가 되지 않아 코드가 더러워질수 있다

Saga
    : redux-saga 또한 비동기 작업을 동기적으로 처리하기 위한 미들웨어라는 점은 thunk와 다르지 않지만 제네레이터 사용을 통해 딜레이 실행을 순차적으로 구현할 수 있으며 로직 처리 코드를 따로 분리

    단, 함수 및 state상태가 많이 추가되어 코드가 길어진다는 단점이 있다

----------------------------------------------------------

redux 설치 라이브러리

npm i redux react-redux redux-saga
npm i -D redux-logger redux-devtools-extenstion
      (개발용(development))


     npm i 패키지명  -D
           npm i 패키지명  --save--dev

     npm i 패키지명  
          npm i 패키지명   --save
    같은말들

----------------------------------------------------------

* 라이브러리를 적용한다면 리액트 18v로 올해 1분기
  라이브러리 설치 자체를 지원하지 않는 경우가 존재?

  특유 에러가 존재 무작정하면 안됨 (에러검색해보고 실행)

npm i 패키지명 --force(강제)
    : 다른 의존 버전들을 함께 설치
npm i 패키지명 --lagercy-peer-deps(충돌무시)
    : 버전이 맞지 않아도 일단 설치

    --force ->안되면 --legercy를 이용

18버전에 맞게 알파버전을 만든 라이브러리 다수 존재 알바버전 설치가 더 좋다

--------------------------------------------------------

    폴더 세가지

        store
            -리덕스 설정파일

        reducer
            - 전역 상태와, 전역 상태를 바꿔주는 로직

        saga
            - 리덕스에서 비동기 처리를 동기적으로 바꾸어주는 로직